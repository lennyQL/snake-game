{"version":3,"sources":["App.js","index.js"],"names":["Square","props","className","style","blockStyle","Board","color","background","state","square","Array","from","fill","posx","posy","key","interval","snake","apple","gameStart","this","intervalTimer","setInterval","update","clearInterval","newSquare","slice","setState","length","e","keyCode","changeInterval","window","addEventListener","handleKeyDown","bind","i","j","rows","push","renderSquare","cols","class","row","React","Component","App","history","whichKey","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c4ccb4b6.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n// import { render } from 'react-dom';\n\nfunction Square(props) {\n  return (\n    <div className=\"square\" style={props.blockStyle}>\n      {/* {props.value} */}\n    </div>\n  );\n}\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    const color = {\n      background: '',\n    };\n\n    this.state = {\n      square: Array.from(new Array(30), () => new Array(18).fill(color)),\n      posx: 10,\n      posy: 10,\n      key: 'left',\n      interval: 300,\n      /**\n       * TODO\n       * * snakeとappleの座標とかを格納するリストを作る\n       * * snake gameの作り方を調べる(codingtrainとかで)\n       */\n      snake: [], \n      apple: [],\n    };\n\n    this.gameStart();\n  }\n\n  /**\n   * ゲームスタート\n   */\n  gameStart() {\n    this.intervalTimer = setInterval(() => this.update(), this.state.interval);\n  }\n\n  /**\n   * ゲーム終了\n   */\n  gameEnd() {\n    clearInterval(this.intervalTimer);\n  }\n\n  /**\n   * 状態遷移のインターバルの変更\n   * @param {*} interval 遷移の間隔(ms)\n   */\n  changeInterval(interval) {\n    clearInterval(this.intervalTimer);\n    this.intervalTimer = setInterval(() => this.update(), interval);\n  }\n\n  /**\n   * 状態更新\n   */\n  update() {\n    const oldColor = { background: '' };\n    const newColor = { background: 'red' };\n    let newSquare = this.state.square.slice();\n    // 前の位置の色をクリア\n    newSquare[this.state.posx][this.state.posy] = oldColor;\n    this.setState({ square: newSquare });\n    // keypressedイベント\n    if (this.state.key === 'up') {\n      if (this.state.posy === 0) {\n        return;\n      }\n      this.setState({ posy: this.state.posy - 1 });\n    } else if (this.state.key === 'down') {\n      if (this.state.posy === this.state.square[0].length - 1) {\n        return;\n      }\n      this.setState({ posy: this.state.posy + 1 });\n    } else if (this.state.key === 'left') {\n      if (this.state.posx === 0) {\n        return;\n      }\n      this.setState({ posx: this.state.posx - 1 });\n    } else if (this.state.key === 'right') {\n      if (this.state.posx === this.state.square.length - 1) {\n        return;\n      }\n      this.setState({ posx: this.state.posx + 1 });\n    }\n    // 位置の更新\n    newSquare[this.state.posx][this.state.posy] = newColor;\n    this.setState({ square: newSquare });\n  }\n\n  /**\n   * keyが押された時\n   */\n  handleKeyDown(e) {\n    // 上\n    if (e.keyCode === 38) {\n      this.setState({ key: 'up' });\n    }\n    // 下\n    else if (e.keyCode === 40) {\n      this.setState({ key: 'down' });\n    }\n    // 左\n    else if (e.keyCode === 37) {\n      this.setState({ key: 'left' });\n    }\n    // 右\n    else if (e.keyCode === 39) {\n      this.setState({ key: 'right' });\n    }\n    // スペース\n    else if (e.keyCode === 32) {\n      this.setState({ interval: 500 });\n      this.changeInterval(this.state.interval);\n    }\n    // エンター\n    else if (e.keyCode === 13) {\n      this.setState({ interval: 300 });\n      this.changeInterval(this.state.interval);\n    }\n  }\n\n  /**\n   *  イベントリスナ\n   */\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown.bind(this));\n  }\n\n  /**\n   * それぞれのブロックの描画\n   * @param {*} i x座標, i番目\n   * @param {*} j y座標, j番目\n   */\n  renderSquare(i, j) {\n    return <Square blockStyle={this.state.square[i][j]} />;\n  }\n\n  /**\n   * 列を決める\n   * @param {*} j 列のkey\n   */\n  row(j) {\n    const rows = [];\n    for (let i = 0; i < 30; i++) {\n      rows.push(<div key={i}>{this.renderSquare(i, j)}</div>);\n    }\n    return rows;\n  }\n\n  render() {\n    // 行を決める\n    const cols = [];\n    for (let i = 0; i < 18; i++) {\n      cols.push(\n        <div class=\"board-row\" key={i}>\n          {this.row(i)}\n          {/* {rows} */}\n        </div>\n      );\n    }\n    return (\n      <div>\n        <div>{cols}</div>\n        <p>key: {this.state.key}</p>\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      key: '',\n      history: Array.from(new Array(30), () => new Array(18).fill(0)),\n    };\n  }\n\n  /**\n   * keyが押された時\n   */\n  handleKeyDown(e) {\n    // 上\n    if (e.keyCode === 38) {\n      this.setState({ key: 'up' });\n    }\n    // 下\n    else if (e.keyCode === 40) {\n      this.setState({ key: 'down' });\n    }\n    // 左\n    else if (e.keyCode === 37) {\n      this.setState({ key: 'left' });\n    }\n    // 右\n    else if (e.keyCode === 39) {\n      this.setState({ key: 'right' });\n    }\n  }\n\n  /**\n   *  イベントリスナ\n   */\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown.bind(this));\n  }\n\n  render() {\n    return (\n      <div>\n        <Board whichKey={this.state.key} />\n        <p>{this.state.key}</p>\n        {/* <p>{this.state.history}</p> */}\n        <p>{this.state.history[3][1]}</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />\n  // </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}